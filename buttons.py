from aiogram.types import ReplyKeyboardMarkup, KeyboardButton,\
    InlineKeyboardButton, InlineKeyboardMarkup
from schedule import Schedule
from data.db_session import global_init, create_session
import database


#--inline--
sch = Schedule('q.pdf')
inlinekb = InlineKeyboardMarkup()
lst = []
for i in sch.get_classes():
    clas = i.split('.')[0]
    if clas not in lst:
        inlinebtn = InlineKeyboardButton(clas, callback_data='classbtn' + clas)
        inlinekb = inlinekb.insert(inlinebtn)
        lst.append(clas)
#--inline
#--inline--
ITcubeinlinekb = InlineKeyboardMarkup()
for i in database.get_section_name_itcube('all'):
    ITcubeinlinebtn = InlineKeyboardButton(i[1], callback_data='ITcubesection' + str(i[0]))
    ITcubeinlinekb = ITcubeinlinekb.insert(ITcubeinlinebtn)
#--inline
kco = KeyboardButton("–ö–¶–ûüè´")
itcube = KeyboardButton("IT-–∫—É–±")
settings = KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è")
schedule = KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üóì")
scheduleitcube = KeyboardButton("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–πüóì")
teachers = KeyboardButton("–£—á–∏—Ç–µ–ª—è üë®‚Äçüè´")
events = KeyboardButton("–°–æ–±—ã—Ç–∏—èüéâ")
eventsnear = KeyboardButton("–ë–ª–∏–∂–∞–π—à–∏–µ —Å–æ–±—ã—Ç–∏—è")
eventsall = KeyboardButton("–í—Å–µ —Å–æ–±—ã—Ç–∏—è")
allteachers = KeyboardButton("–°–ø–∏—Å–æ–∫ —É—á–∏—Ç–µ–ª–µ–π üìù")
searchteacher = KeyboardButton("–ü–æ–∏—Å–∫ —É—á–∏—Ç–µ–ª—è üîé")
btn = KeyboardButton("btn ")
backbtn = KeyboardButton("‚Ü©")
changeclass = KeyboardButton("–°–º–µ–Ω–∏—Ç—å –∫–ª–∞—Å—ÅüÜô")
andtoto = KeyboardButton("–°–æ–±—ã—Ç., –§–ò–û —É—á–∏—Ç., –∏ —Ç.–¥. ...")
changemailingScheduleNO = KeyboardButton("–†–∞—Å—Å—ã–ª–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüü•")
changemailingScheduleYES = KeyboardButton("–†–∞—Å—Å—ã–ª–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüü©")
changemailingEventsNO = KeyboardButton("–†–∞—Å—Å—ã–ª–∫–∞ –°–æ–±—ã—Ç–∏–π      üü•")
changemailingEventsYES = KeyboardButton("–†–∞—Å—Å—ã–ª–∫–∞ –°–æ–±—ã—Ç–∏–π      üü©")

MENUkb = ReplyKeyboardMarkup(resize_keyboard=True)
MENUkb = MENUkb.add(kco)
MENUkb = MENUkb.add(itcube)
#MENUkb = MENUkb.add(itcube)
MENUkb = MENUkb.add(settings)

KCOkb = ReplyKeyboardMarkup(resize_keyboard=True)
KCOkb = KCOkb.add(events, schedule, teachers).add(changeclass).add(backbtn)

ITcubekb = ReplyKeyboardMarkup(resize_keyboard=True)
ITcubekb = ITcubekb.add(scheduleitcube)
ITcubekb = ITcubekb.add(backbtn)

KCOteacherskb = ReplyKeyboardMarkup(resize_keyboard=True)
KCOteacherskb = KCOteacherskb.add(allteachers)
KCOteacherskb = KCOteacherskb.add(searchteacher)
KCOteacherskb = KCOteacherskb.add(backbtn)
KCOeventskb = ReplyKeyboardMarkup(resize_keyboard=True)
KCOeventskb = KCOeventskb.add(eventsall)
KCOeventskb = KCOeventskb.add(eventsnear)
KCOeventskb = KCOeventskb.add(backbtn)

HLPdbkb = ReplyKeyboardMarkup(resize_keyboard=True)
HLPdbkb = HLPdbkb.add(changeclass)
HLPdbkb = HLPdbkb.add(changemailingScheduleYES)
HLPdbkb = HLPdbkb.add(backbtn)

ANDTOTOkb = ReplyKeyboardMarkup(resize_keyboard=True)
ANDTOTOkb = ANDTOTOkb.add(teachers)
ANDTOTOkb = ANDTOTOkb.add(events)
ANDTOTOkb = ANDTOTOkb.add(backbtn)
"""
S - simple –ø—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞, –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–æ—Ç–æ—Ä–æ–π –º–µ–Ω—è–µ—Ç—Å—è –º–µ–Ω—é.
H - hard –∫–Ω–æ–ø–∫–∞ –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é –∏–ª–∏ —á—Ç–æ —Ç–æ –¥–µ–ª–∞–µ—Ç.
D - dynamic –∫–Ω–æ–ø–∫–∞ –º–µ–Ω—è–µ—Ç —Å–≤–æ–π –æ–±–ª–∏–∫
–í—Å–µ —ç—Ç–∏ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏ —É–∫–∞–∑. –≤ —Å–ª–æ–≤–∞—Ä–µ –¥–ª—è —Å–æ–∫—Ä–∞—â–µ–Ω–∏—è –∫–æ–¥–∞.
"""
dictKB = {
    '–ö–¶–ûüè´': [KCOkb, None, 'S', 1],
    'IT-–∫—É–±': [ITcubekb, None, 'S', 1],
    '–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è': [None, 'buttons.dynamic_menu_helpDB(Utl_id, msgtext)', 'D', 1],
    '–°–æ–±—ã—Ç., –§–ò–û —É—á–∏—Ç., –∏ —Ç.–¥. ...': [ANDTOTOkb, None, 'S', 1],
    '–£—á–∏—Ç–µ–ª—è üë®‚Äçüè´': [KCOteacherskb, None, 'S', 1],
    '–°–º–µ–Ω–∏—Ç—å –∫–ª–∞—Å—ÅüÜô': [inlinekb, 'schedule()', 'H', 0],
    '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üóì': [inlinekb, 'schedule()', 'H', 1],
    '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–∞–Ω—è—Ç–∏–πüóì': [ITcubeinlinekb, 'schedule()', 'H', 1],
    '–í—Å–µ —Å–æ–±—ã—Ç–∏—è': [None, None, 'H', 1],
    '–°–æ–±—ã—Ç–∏—èüéâ': [KCOeventskb, None, 'S', 1],
    '–†–∞—Å—Å—ã–ª–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüü•': [None, 'buttons.dynamic_menu_helpDB(Utl_id, msgtext)', 'D', 1],
    '–†–∞—Å—Å—ã–ª–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüü©': [None, 'buttons.dynamic_menu_helpDB(Utl_id, msgtext)', 'D', 1],
    '–†–∞—Å—Å—ã–ª–∫–∞ –°–æ–±—ã—Ç–∏–π      üü•': [None, 'buttons.dynamic_menu_helpDB(Utl_id, msgtext)', 'D', 1],
    '–†–∞—Å—Å—ã–ª–∫–∞ –°–æ–±—ã—Ç–∏–π      üü©': [None, 'buttons.dynamic_menu_helpDB(Utl_id, msgtext)', 'D', 1],
    '–°–ø–∏—Å–æ–∫ —É—á–∏—Ç–µ–ª–µ–π üìù': [KCOteacherskb, 'listteachers()', 'S', 1]
}

def dynamic_menu_helpDB(Utl_id, msgtext):
    if msgtext == '–†–∞—Å—Å—ã–ª–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüü•':
        database.change_user_what(Utl_id, True, 'mailing-schedule')
    elif msgtext == '–†–∞—Å—Å—ã–ª–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—èüü©':
        database.change_user_what(Utl_id, False, 'mailing-schedule')
    elif msgtext == '–†–∞—Å—Å—ã–ª–∫–∞ –°–æ–±—ã—Ç–∏–π      üü•':
        database.change_user_what(Utl_id, True, 'mailing-events')
    elif msgtext == '–†–∞—Å—Å—ã–ª–∫–∞ –°–æ–±—ã—Ç–∏–π      üü©':
        database.change_user_what(Utl_id, False, 'mailing-events')
    HLPdbkb = ReplyKeyboardMarkup(resize_keyboard=True)
    #HLPdbkb = HLPdbkb.add(changeclass)
    if database.chek_user(Utl_id, 'mailing-schedule'):
        HLPdbkb = HLPdbkb.add(changemailingScheduleYES)
    if not database.chek_user(Utl_id, 'mailing-schedule'):
        HLPdbkb = HLPdbkb.add(changemailingScheduleNO)
    if database.chek_user(Utl_id, 'mailing-events'):
        HLPdbkb = HLPdbkb.add(changemailingEventsYES)
    if not database.chek_user(Utl_id, 'mailing-events'):
        HLPdbkb = HLPdbkb.add(changemailingEventsNO)
    HLPdbkb = HLPdbkb.add(backbtn)
    return HLPdbkb